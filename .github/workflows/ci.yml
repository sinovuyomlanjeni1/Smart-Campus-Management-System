name: CI/CD - Test and Release Pipeline

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and test
        run: mvn clean verify

  release:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR
        run: mvn clean package

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: smart-campus-app
          path: target/*.jar

          
---

## ✅ Pull Request Blocking Tests Setup

To show that **tests must pass before merging:**

1. Push a branch with a failing test (e.g., assert `1 == 2`)
2. Open a PR to `main`
3. Wait for GitHub Actions to run
4. You'll see ❌ “Some checks were not successful” → **Merge is disabled**
5. Screenshot this and submit

---

### 📸 Deliverables

| Deliverable                            | How to Get It |
|----------------------------------------|----------------|
| ✅ `README.md`                         | Use the example above |
| 📸 PR with failed tests blocking merge | Create a fake failing test and PR |
| 📸 Artifacts on `main` merge           | Use Actions → check `.jar` file |
| 📸 Swagger UI (optional)               | Go to `/swagger-ui.html` |

---



